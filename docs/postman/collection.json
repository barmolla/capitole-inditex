{
	"info": {
		"_postman_id": "2ae64928-7289-4496-b532-2b433a1261e0",
		"name": "Capitole Consulting - Inditex",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "17798603"
	},
	"item": [
		{
			"name": "Search Price - Test Cases",
			"item": [
				{
					"name": "Test 1 - 1 - 35455 - 2020-06-14 00:00:00",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"applicationDate\": \"2020-06-14 00:00:00\",\n    \"productID\": 35455,\n    \"brandID\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/v1/prices",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v1",
								"prices"
							]
						}
					},
					"response": []
				},
				{
					"name": "Test 2 - 1 - 35455 - 2020-06-14 16:00:00",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"applicationDate\": \"2020-06-14 16:00:00\",\n    \"productID\": 35455,\n    \"brandID\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/v1/prices",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v1",
								"prices"
							]
						}
					},
					"response": []
				},
				{
					"name": "Test 3 - 1 - 35455 - 2020-06-14 21:00:00",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"applicationDate\": \"2020-06-14 21:00:00\",\n    \"productID\": 35455,\n    \"brandID\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/v1/prices",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v1",
								"prices"
							]
						}
					},
					"response": []
				},
				{
					"name": "Test 4 - 1 - 35455 - 2020-06-15 10:00:00",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"applicationDate\": \"2020-06-15 10:00:00\",\n    \"productID\": 35455,\n    \"brandID\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/v1/prices",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v1",
								"prices"
							]
						}
					},
					"response": []
				},
				{
					"name": "Test 5 - 1 - 35455 - 2020-06-16 21:00:00",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"applicationDate\": \"2020-06-16 21:00:00\",\n    \"productID\": 35455,\n    \"brandID\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/v1/prices",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v1",
								"prices"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Search Price - Other Tests",
			"item": [
				{
					"name": "Invalid applicationDate",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"JSON Parse Error\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.include(\"JSON parse error: Cannot deserialize value of type\");",
									"    pm.expect(jsonData.message).to.include(\"java.time.LocalDateTime\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"applicationDate\": \"2020-06-14 A0:00:00\",\n    \"productID\": 35455,\n    \"brandID\": 1\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/v1/prices",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v1",
								"prices"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid brandID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"JSON Parse Error\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.include(\"JSON parse error: Invalid numeric value: Leading zeroes not allowed;\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"applicationDate\": \"2020-06-14 00:00:00\",\n    \"productID\": 35455,\n    \"brandID\": -0001\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/v1/prices",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v1",
								"prices"
							]
						}
					},
					"response": []
				},
				{
					"name": "Empty payload",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 415\", function () {",
									"    pm.response.to.have.status(415);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/v1/prices",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v1",
								"prices"
							]
						}
					},
					"response": []
				},
				{
					"name": "Price not found",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Message price not found\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.include(\"Price not found\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"applicationDate\": \"2023-06-14 00:00:00\",\n    \"productID\": 35455,\n    \"brandID\": 1\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/v1/prices",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v1",
								"prices"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}